/*  
 @Name: 网络电话
 @Author：Evan
 @Desc：使用请保留出处.
 @Date: 2016-04-17
 @QQ: 1349090004
 @Email: evanzhou1992@163.com
 */
;!function(win, undefined){
	var config = {	
    aniTime: 200,
    right: -282,
    layerindex:null,
    debugindex:null,
    timer:null,
    debugmodel:function(val){
		if(val){
			return voip.setpop("voip_debugmodel",val);
		}else{
			var ext=voip.getpop("voip_debugmodel")||"0";
			return  ext;
		};
    },
    debug:function(val){
		if(val){
			if(val=="true"){
			   return voip.setpop("voip_debug","true");
		   }else{
			  return voip.setpop("voip_debug","false"); 
		   };
		}else{
			var ext=voip.getpop("voip_debug")||"false";
			return  ext;
		};
    },
    domain:".",
    ws:null,
    hosts: (function(){
        var dk = location.href.match(/\:\d+/);
        dk = dk ? dk[0] : '';
        return '' + document.domain + dk + '';
    })(),
    json: function(url, data, callback, error){
        return $.ajax({
            type: 'POST',
            url: url,
            data: data,
            dataType: 'json',
            success: callback,
            error: error
        });
    },
    html:function(url, data, callback, error){
    	var html=$.ajax({
            type: 'POST',
            url: url,
            data: data,
            cache:false, 
            async:false,
            dataType: 'html',
            success: callback,
            error: error
        });
    },
    websockt:function(){voip.websocket(config.api.wsurl);},
    poll:function(url,data,time,callback, error){},
    log:function(msg){
    	if(config.debug()=="true"){
    		if(config.debugmodel()=="1"){
    			console.log(msg);
    		}else if(config.debugmodel()=="2"){
    			voip.dubugPage(msg);
    		}else{
    		}
    	}
    }
    
},

vertos={
	cur_call:null,
	confMan:null,
	verto:null,
	ringing:false,
	conference:function(val){
		return false;
	},
	autocall:function(val){
		if(val){
			if(val=="true"){
			   return voip.setpop("voip_autocall",true);
		   }else{
			  return voip.setpop("voip_autocall",false); 
		   };
		}else{
			var ext=voip.getpop("voip_autocall")||"false";
			config.log("是否自动外呼:"+ext);
			if(ext=="true"){
				return true;
			}else{
				return false;
			}
		};
    },
	chatting_with:false,//false,//消息状态
	first_login:false,
	online_visible:false,
	sounds:[
	{id:0,name:"默认",url:config.domain+"/sounds/bell_ring2.wav"},
	{id:1,name:"dududu经典女声铃声",url:config.domain+"/sounds/dududu.mp3"},
	{id:2,name:"iPhone铃声",url:config.domain+"/sounds/iPhone.mp3"},
	{id:3,name:"霸气震撼的铃声",url:config.domain+"/sounds/bqzh.mp3"}
	],
	checkbox_rember:function(val){	  
	   if(val){
		   config.log("设置账号状态:"+val);
		   if(val=="true"){
			   return voip.setpop("checkbox_rember",true);
		   }else{
			  return voip.setpop("checkbox_rember",false); 
		   }
		}else{
			var ext=voip.getpop("checkbox_rember")||false;
			config.log("获取账号状态:"+ext||"(默认)false");
			return  ext;
		};
    
	},
	checkbox_autologin:function(val){
		if(val){
			config.log("设置自动登陆状态:"+val);
			if(val=="true"){
			   return voip.setpop("checkbox_autologin",true);
		   }else{
			  return voip.setpop("checkbox_autologin",false); 
		   }
		}else{
			var ext=voip.getpop("checkbox_autologin")||false;
			config.log("获取自动登陆状态:"+ext||"(默认)false");
			return  ext;
		};
	},
	ringtones:function(val){
		//铃声列表，可配置		
		if(val){
			//var ball=vertos.sounds[index].url;
			config.log("设置来电铃声:"+val);
			return voip.setpop("voip_ball",val);
		}else{
			var ext=voip.getpop("voip_ball")||"assets/lib/voip/sounds/bell_ring2.wav";
			config.log("获取来电铃声:"+ext||"(默认)assets/lib/voip/sounds/bell_ring2.wav");
			return  ext;
		};
	},
	use_stun:function(val){
		if(val){
			config.log("设置简单穿透协议:"+val);
			if(val=="true"){
			   return voip.setpop("voip_use_stun",true);
		   }else{
			  return voip.setpop("voip_use_stun",false); 
		   }
		}else{
			var ext=voip.getpop("voip_use_stun")||"true";
			config.log("是否使用简单穿透协议:"+ext);
			if(ext=="true"){
				return true;
			}else{
				return false;
			}
		};
	},//true,
    use_vid:function(val){
		if(val){
			config.log("设置是否使用视频通话:"+val);
			if(val=="true"){
			   return voip.setpop("voip_use_vid",true);
		   }else{
			  return voip.setpop("voip_use_vid",false); 
		   };
			//return voip.setpop("voip_use_vid",val);
		}else{
			var ext=voip.getpop("voip_use_vid")||"false";
			config.log("获取是否使用视频通话:"+ext);
			if(ext=="true"){
				return true;
			}else{
				return false;
			}
		};
	},//false,//是否使用视频通话
    use_stereo:function(val){//是否使用立体声
		if(val){
			config.log("设置是否使用立体声:"+val);
			if(val=="true"){
			   return voip.setpop("voip_use_stereo",true);
		   }else{
			  return voip.setpop("voip_use_stereo",false); 
		   };
			//return voip.setpop("voip_use_stereo",val);
		}else{
			var ext=voip.getpop("voip_use_stereo")||"true";
			config.log("获取是否使用立体声:"+ext);
			if(ext=="true"){
				return true;
			}else{
				return false;
			}
		};
	},//true,
	ext:function(val){
		if(val){
			config.log("设置外呼号码:"+val);
			return voip.setpop("voip_ext",val);
		}else{
			
			var ext=voip.getpop("voip_ext")||"9664";
			config.log("获取外呼号码:"+ext||"(默认)9664");
			return  ext;
		};
	},
	name:function(val){
		if(val){
			config.log("设置用户名:"+val);
			return voip.setpop("voip_name",val);
		}else{
			
			var ext=voip.getpop("voip_name")||"FreeSWITCH User";
			config.log("获取用户名:"+ext||"(默认)FreeSWITCH User");
			return  ext;
		};
	},	
	cid:function(val){
		if(val){
			config.log("设置用户名id:"+val);
			return voip.setpop("voip_cid",val);
		}else{
			
			var ext=voip.getpop("voip_cid")||"1000";
			config.log("获取用户名id:"+ext||"(默认)1000");
			return  ext;
		};
	},
	textto:function(val){
		if(val){
			config.log("设置textto:"+val);
			return voip.setpop("voip_textto",val);
		}else{
			
			var ext=voip.getpop("voip_textto")||"1000";
			config.log("获取textto:"+ext||"(默认)1000");
			return  ext;
		};
	},
	login:function(val){
		if(val){
			config.log("设置登录ID:"+val);
			return voip.setpop("voip_login",val);
		}else{
			
			var ext=voip.getpop("voip_login")||"1000";
			config.log("获取登录ID:"+ext||"(默认)1000");
			return  ext;
		};
	},//登陆ID
	passwd:function(val){
		if(val){
			config.log("设置登录密码:"+val);
			return voip.setpop("voip_passwd",val);
			
		}else{
			var ext=voip.getpop("voip_passwd")||"1234";
			config.log("获取登录密码:"+ext||"(默认)1234");
			return  ext;
		};
	},//登陆密码
	hostName:function(val){
		if(val){
			config.log("设置登录主机名:"+val);
			return voip.setpop("voip_hostName",val);
		}else{
			
			var ext=voip.getpop("voip_hostName")||"webrtc.freeswitch.org";//192.168.10.3
			config.log("获取登录主机名:"+ext||"(默认)webrtc.freeswitch.org");
			return  ext;
		};
	},
	wsURL:function(val){
		if(val){
			config.log("设置websocketURL:"+val);
			return voip.setpop("voip_wsURL",val);
		}else{
			var ext=voip.getpop("voip_wsURL")||"ws://webrtc.freeswitch.org:8082";//192.168.10.3
			config.log("获取websocketURL:"+ext||"(默认)wss://webrtc.freeswitch.org:8082");
			return  ext;
		};
		//return 'wss://webrtc.freeswitch.org:8082';//ws://192.168.10.3:8081
	},
	MessageLog:function(verto, dialog, msg, data){//消息日志接口
		
	},
	DialogStateLog:function(d){//电话日志接口
		
	},
	WSLoginLog:function(v, success){//登录日志接口
		
	},
	WSCloseLog:function(v, success){//退出日志接口
		
	},
	EventLog:function(v,e){
		
	}
}, dom = [$(window), $(document), $('html'), $('body')], voip = {};

//websocket 方法	
voip.websocket=function(url){
	
};

voip.setpop=function(cname, dft) {
   // var tmp = $.cookie(cname) || dft;
    $.cookie(cname, dft, {
        expires: 365
    });
    return dft;
};

voip.getpop=function(cname) {
    var tmp = $.cookie(cname);
    return tmp;
};


///////////////////////////////////核心方法区///////////////////////////////////////////////////////

/**
 * 回调函数
 * @param {Object} verto ：verto返回的数据集合
 * @param {Object} dialog :
 * @param {Object} msg
 * @param {Object} data
 */

var callbacks = {
    onMessage: function(verto, dialog, msg, data) {
        voip.onMessage(verto, dialog, msg, data);
    },
    onDialogState: function(d) {
        voip.onDialogState(d);
    },
    onWSLogin: function(v, success) {
        voip.onWSLogin(v, success);
    },
    onWSClose: function(v, success) {
        voip.onWSClose(v, success);
    },
    onEvent: function(v, e) {
       voip.onEvent(v, e);
    },
};



//////////////////////消息区///////////////////
////回调消息接口
voip.onMessage=function(verto, dialog, msg, data){
	var pvtEvent=$.verto.enum.message.pvtEvent;
	var info=$.verto.enum.message.info;
	var display=$.verto.enum.message.display;
	switch (msg) {
	  case pvtEvent:
	  if (data.pvtData) {
                switch (data.pvtData.action) {
                case "conference-liveArray-part":
                	config.log("conference-liveArray-part");
                    voip.clearConfMan();
                    break;
                case "conference-liveArray-join":
                	config.log("conference-liveArray-join");
                    voip.liveArray(verto, dialog, msg, data);
                    break;
                }
     }
     break;
	case info:
	    voip.Message_info(verto,dialog,msg,data);	
     break;
     case display:
        voip.Message_display(verto,dialog,msg,data);       
        break;
     default:
        break;
	};
};

///电话会议事件
voip.liveArray=function(verto, dialog, msg, data){
	voip.clearConfMan();
	if(vertos.conference()==false){
		vertos.verto.hangup();
        vertos.cur_call = null;
		
		return false;
	}
    layer.open({
    type: 1,
    shade :0,
    closeBtn: 1,
    shift: 0,
    title :'电话会议',
    //offset: ['10px', '10px'],
    area: ['925px', '620px'], //宽高
    content: $("#voip_conf")
	});
    
    
    vertos.confMan = new $.verto.confMan(verto, {
	tableID: "#conf_list",//表格ID
	statusID: "#conf_count",//状态ID
	mainModID: "#conf_mod",
	displayID: "#conf_display",
	dialog: dialog,
	hasVid: vertos.use_vid(),//是否使用视频通话
	laData: data.pvtData
    });		
	vertos.chatting_with = data.pvtData.chatID;////实时聊天窗口ID
	$("#msggroups").empty();
};

voip.Message_info=function(verto, dialog, msg, data){
	 config.log("接收消息");
	 var body = data.body;//消息实体
	 var from_msg_name = data.from_msg_name || data.from;
     var from_host=data.from_host;//主机地址
     var from_msg_number=data.from_msg_number||data.from_user;//
     var from=data.from;//对方地址
     var to=data.to;//本机地址
	 config.log("消息来自:"+from_msg_name);
	 
	 $("#voip_liveArray_chatwin").append("<li><span style='color:red;'>"+from_msg_name+":</span><br/><span style='color:blue;'>"+body+"</span></li>");
};

voip.Message_display=function(verto, dialog, msg, data){
	//console.log(dialog);
	//config.log(msg);
	//config.log(data);
	$("#active_name").html(dialog.params.remote_caller_id_name);
    var party = dialog.params.remote_caller_id_name + "<" + dialog.params.remote_caller_id_number + ">";
    config.log("Talking to: " + dialog.cidString());
    $("#trying_msg").html("来自："+dialog.params.remote_caller_id_number);
};


//////////////////////事件区///////////////////

voip.onDialogState=function(d){
    var d_ringing=$.verto.enum.state.ringing;
	var d_trying=$.verto.enum.state.trying;
	var d_early=$.verto.enum.state.early;
	var d_active=$.verto.enum.state.active;
	var d_hangup=$.verto.enum.state.hangup;
	var d_destroy=$.verto.enum.state.destroy;
	var d_held=$.verto.enum.state.held;
	vertos.cur_call = d;
	if (d.state == d_ringing) {
	    vertos.ringing = true;
	} else {
	    vertos.ringing = false;
	}
        switch (d.state) {
        case d_ringing:
            config.log("Call From: " + d.cidString());
			voip.ringing(d);
            break;
        case d_trying:
            config.log("Calling: " + d.cidString());
            voip.trying(d);
	    break;
        case d_early:
        case d_active:
            config.log("Talking to: " + d.cidString());
            voip.active(d);
            break;
        case d_hangup:
             voip.hangup(d);
        case d_destroy://销毁事件
        	voip.destroy(d);
            break;
        case d_held:
        	voip.held(d);
            break;
        default:
            break;
        }
};
voip.onWSLogin=function(v, success){
	vertos.cur_call = null;
	vertos.ringing = false;
        if (success) {
        config.log("登陆成功！");
		$("#voip_login_msg").removeClass("fa fa-spinner fa-2x fa-pulse");
		$("#voip_login_msg_to").html("");
		voip.changePage(1);
            voip.online(true);
			    /*
			        verto.subscribe("presence", {
			            handler: function(v, e) {
			                console.error("PRESENCE:", e);
			            }
				});
			    */
			
			    if (vertos.autocall()) {
					vertos.autocall("false");
					//自动呼叫
				  //voip.docall();//呼叫
			    }
        } else {
           config.log('登陆异常'); 
           $("#voip_login_msg").removeClass("fa fa-spinner fa-2x fa-pulse");
           $("#voip_login_msg_to").html("登陆异常");
		   voip.changePage(0);
           voip.online(false);             
        };
        
      
        
        
};
voip.onWSClose=function(v, success){
	config.log("退出登录!");
	voip.changePage(0);
	voip.online(false); 
};
voip.onEvent=function(v, e){
	 console.debug("GOT EVENT", e);
};

/**
 * 清空配置信息
 * @param {Object} msg
 */
voip.clearConfMan=function () {
    if (vertos.confMan) {
        vertos.confMan.destroy();
        vertos.confMan = null;
    }
    vertos.chatting_with = null;
};

voip.message=function(message){

	if (!vertos.cur_call && vertos.chatting_with) {
		config.log('用户不在线!');
	    return;
	};
	
	vertos.cur_call.message({to: vertos.chatting_with, //发送地点
			  body: message, //消息实体
			  from_msg_name: vertos.cur_call.params.caller_id_name, //发送人姓名
			  from_msg_number: vertos.cur_call.params.caller_id_number  //发送人号码
			 });
};

voip.messageTextToJQ=function (body) {
	// Builds a jQuery collection from body text, linkifies http/https links, imageifies http/https links to images, and doesn't allow script injection
	
	var match, $link, img_url, $body_parts = $(), rx = /(https?:\/\/[^ \n\r]+|\n\r|\n|\r)/;
	
	while ((match = rx.exec(body)) !== null) {
		if (match.index !== 0) {
			$body_parts = $body_parts.add(document.createTextNode(body.substr(0, match.index)));
		}

		if (match[0].match(/^(\n|\r|\n\r)$/)) {
			// Make a BR from a newline
			$body_parts = $body_parts.add($('<br />'));
			body = body.substr(match.index + match[0].length);
		} else {
			// Make a link (or image)
			$link = $('<a target="_blank" />').attr('href', match[0]);
			
			if (match[0].search(/\.(gif|jpe?g|png)/) > -1) {
				// Make an image
				img_url = match[0];

				// Handle dropbox links
				if (img_url.indexOf('dropbox.com') !== -1) {
					if (img_url.indexOf('?dl=1') === -1 && img_url.indexOf('?dl=0') === -1) {
						img_url += '?dl=1';
					} else if (img_url.indexOf('?dl=0') !== -1) {
						img_url = img_url.replace(/dl=0$/, 'dl=1');
					}
				}

				$link.append($('<img border="0" class="chatimg" />').attr('src', img_url));
			} else {
				// Make a link
				$link.text(match[0]);
			}

			body = body.substr(match.index + match[0].length);
			$body_parts = $body_parts.add($link);
		}
	}
	if (body) {
		$body_parts = $body_parts.add(document.createTextNode(body));
	}

	return $body_parts;
} // END function messageTextToJQ

voip.login=function(){
	$("#voip_login_msg_to").html("");
	vertos.cur_call = null;//清空配置
	if(!vertos.autocall()){
		//输入自动拨号码
	}
	
	if (vertos.verto) {
	    vertos.verto.iceServers(vertos.use_stun());
	}
	
	
	vertos.verto = new $.verto({
        login: vertos.login() + "@" +vertos.hostName(),
        passwd: vertos.passwd(),
        socketUrl:vertos.wsURL(),
        tag: "webcam",///语音通话audio
        ringFile:vertos.ringtones(),
        videoParams: {
            "minWidth": "1280",
            "minHeight": "720",
	    "minFrameRate": 30
        },
	audioParams: {
	    googAutoGainControl: false,
	    googNoiseSuppression: false,
	    googHighpassFilter: false
	},
	iceServers: vertos.use_stun()
    },callbacks);
	
};

voip.online=function(boo){
	if(boo){
		config.log('在线');
	}else{
		config.log('离线');
	}
	
	vertos.online_visible=boo;
};

//外呼方法
voip.docall=function(){
    if (vertos.cur_call) {//通话事件已存在
        return;
    };
    vertos.cur_call = vertos.verto.newCall({
        destination_number: vertos.ext(),
        caller_id_name: vertos.name(),
        caller_id_number: vertos.cid(),
        useVideo: vertos.use_vid(),
        useStereo: vertos.use_stereo()
    });
    config.log("是否使用视频通话:"+vertos.use_vid());
    if(vertos.use_vid()==true){
    	 layer.open({
	      title:'视频通话',
		  type: 1,
		  skin: 'layui-layer-rim', //加上边框
		  area: ['500px', '300px'], //宽高
		  content: $("#voip_liveArray_video")
		});
    };
    
	
    
    
};

//外呼事件
voip.trying=function(d){
	config.log("外呼电话");
	//config.log(d);
	voip.changePage(4);
	$("#ringing_name").html("未知");//设置外呼用户名
	$("#ringing_msg").html(d.params.remote_caller_id_number);//设置外呼号码
};



//通话事件
voip.active=function(d){
	config.log("通话事件");
	config.log("通话姓名："+d.params.remote_caller_id_name);
	config.log("通话号码："+d.params.remote_caller_id_number);
	var number=d.params.remote_caller_id_number;
	var name=d.params.remote_caller_id_name;
	//layer.msg(name);
	if(name=="Outbound Call"){
		name=number;
	}
	$("#active_name").html(name);
	$("#active_number").html("正在与"+number+"通话");
	voip.timer("start");
	voip.changePage(2);
};

//销毁事件
voip.destroy=function(d){
	config.log("销毁事件");
	voip.clearConfMan();
    vertos.cur_call = null;
    
};


voip.early=function(d){
	config.log("early事件");
};


voip.hangup=function(d){
	voip.timer("stop",d.cause);
	voip.changePage(1);//挂断电话
	config.log("挂断电话");
};

voip.held=function(d){
	config.log("挂起电话");
};


//来电事件
voip.ringing=function(d){
	voip.changePage(3);
	config.log("来电号码："+d.params.caller_id_number);
	 //$("#trying_msg").html("来自："+dialog.params.remote_caller_id_number);
	voip.ringing_page(d);
	return true;
	voip.ringing_msg(d);
};

///页面形式来电
voip.ringing_page=function(d){
	$("#trying_msg").html("来电号码："+d.params.caller_id_number);	
	$("#ansbtn").click(function() {
          vertos.cur_call.answer({
		    useStereo: vertos.use_stereo(),
		    callee_id_name: vertos.name(),
		    callee_id_number:vertos.cid()
		   });
     });
    $("#declinebtn").click(function() {
        vertos.cur_call.hangup();
    });
    
    //是否视频通话
    if (d.params.wantVideo) {
    	config.log('来电用户请求开启视频通话');
    	if(vertos.use_vid()){
    		 $("#vansbtn").click(function() {     	
	            vertos.cur_call.answer({
	            useVideo: true,
				useStereo:vertos.use_stereo()
	            });
	            
	            layer.open({
	              title:'视频通话',
				  type: 1,
				  skin: 'layui-layer-rim', //加上边框
				  area: ['500px', '300px'], //宽高
				  content: $("#voip_liveArray_video")
				});
	            });
    	}else{
    		config.log('客户端禁止视频通话');
    	}
        
    } else {
        config.log('来电用户请求语音通话');
    }
    
};

///提示形式来电
voip.ringing_msg=function(d){
	layer.confirm('来电', {
	  btn: ['接听','挂断'] //按钮
	}, function(index){
		if (d.params.wantVideo) {
			  			
			layer.confirm('是否视频通话', {
			  btn: ['是','否'] //按钮
			}, function(){
			   //layer.msg('应答中', {icon: 1});
				voip.vodeo(d);
			}, function(){
			   // layer.msg('挂断了', {icon: 1});
			   
			   vertos.cur_call.answer({
		    	useStereo: vertos.use_stereo(),
		    	callee_id_name: vertos.name(),
		    	callee_id_number:vertos.cid(),
		        });
			   
			   layer.close(index);
			});
			

		} else {
                config.log('来电用户请求语音通话');
                vertos.cur_call.answer({
		    	useStereo:vertos.use_stereo(),
		    	callee_id_name: vertos.name(),
		    	callee_id_number:vertos.cid(),
		        });
        }
		
	}, function(){
		vertos.cur_call.hangup();
	    layer.msg('挂断了', {icon: 1});
	});
    
};



voip.vodeo=function(d){
	vertos.use_vid(true);//视频通话开启
    vertos.cur_call.answer({
    useVideo: true,
	useStereo:vertos.use_stereo()
    });
    
    layer.open({
      type: 1,
      title: '视频通话中。。。。',
      shadeClose: true,
      shade: false,
      maxmin: true, //开启最大化最小化按钮
      area: ['893px', '600px'],
      content: $('#webcam')
    });
	
};

///////////////////////////////////////核心方法结束////////////////////////////////////////////////////
voip.init=function(){
	var voipNode='';
	var datas='<div id="xximmm" class="xxim_main">'+
             '<div class="xxim_top" id="xxim_top">'+
               '<div class="xxim_search">'+
			      
                  '<div class="top-a">'+
				  '<i class="fa fa-wifi"></i> '+
				  '<i class="fa fa-commenting-o"></i> '+
				  '<i class="fa fa-calendar"></i> '+
				  '</div>'+
				  '<div class="top-b" id="top-clock" align="center">00:00:00</div>'+
				  '<div class="top-c" align="right">'+
				    '100% <i class="fa fa-battery-full"></i>'+
				  '</div>'+
               '</div>'+

				//<!-- 登陆界面0--->
               '<ul class="xxim_list" style="display:block">'+
			      '<li class="voip_login">'+
			      		'<div class="voip_logo" align="center">'+
			      		    '<div class="voip_logo_img"/>'+
			      			//' <img alt="" src="./images/verto.gif" width="80%">'+
			      		'</div>'+
			      		'<div class="voip_input">'+
			      			  '<div class="voip_name" align="center">'+
			      			  '昵称:'+
			      			  '<input style="width: 200px;height: 25px;font-size: 20px;" id="voip_name"/>'+
			      			  '</div>'+			      			  
			      			  '<div class="voip_cid" align="center">'+
			      			  '工号:'+
			      			  '<input style="width: 200px;height: 25px;font-size: 20px;" id="voip_cid" />'+
			      			 ' </div>'+
			      			  
			      			 '<div class="voip_setting" align="center">'+
			      			 '<input type="checkbox" id="checkbox_rember" />记住账号'+
			      			  '<input type="checkbox" id="checkbox_autologin" /> 自动登陆'+
			      			 '</div>'+
			      			 
			      			 '<div class="voip_loging" align="center">'+
			      			  '<a href="javascript:;" class="button button-3d button-primary button-pill" id="voip_loging">登录</a>'+
			      			 '</div>'+
			      			  
			      		'</div>'+
			      		'<div class="voip_login_msg" align="center">'+
			      		 ' <div id="voip_login_msg_to" style="color: red;"></div>'+
			      		 ' <i class="" id="voip_login_msg"></i>'+
			      		'</div>'+
			      '</li>'+
			   
			   '</ul>'+

              // <!-- 拨号界面1--->
               '<ul class="xxim_list" >'+
                  ' <li class="voip_display" >'+
                      
                    '  <div class="voip_numbers" align="center">'+
                       
                     '  <span id="callmun"></span>'+
                     ' </div>'+
				   '</li>'+
				   '<li class="voip_cells">'+
						
						
						
						'<table class="voip_nums">'+
							'<tr class="cell_line" >'+
							'<td align="center" class="cell" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num">1</a>'+
							'</td>'+

							'<td align="center" class="cell" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num">2</a>'+
							
							'</td>'+
							'<td align="center" class="cell" style="border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">3</a></td>'+
							'</tr>'+
							'<tr class="cell_line">'+
							'<td align="center" class="cell" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;"  class="num">4</a></td>'+
							'<td align="center" class="cell" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">5</a></td>'+
							'<td align="center" class="cell" style="border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">6</a></td>'+
							'</tr>'+
							'<tr>'+
							'<td align="center" class="cell" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">7</a></td>'+
							'<td align="center" class="cell" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">8</a></td>'+
							'<td align="center" class="cell" style="border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">9</a></td>'+
							'</tr>'+
							'<tr>'+
							'<td align="center" class="cell" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">*</a></td>'+
							'<td align="center" class="cell" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">0</a></td>'+
							'<td align="center" class="cell" style="border-bottom:1px solid #E2E4E6;">'+
							'<a  href="javascript:;" class="num">#</a></td>'+
							'</tr>'+
							'<tr>'+
							'<td align="center" class="cell-user" id="cell-user" style="border-right:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num"><i class="fa  fa-user"></i></a></td>'+
							'<td align="center" class="cell-phone" id="cell-phone" style="border-right:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num"><i class="fa fa-phone"></i></a></td>'+
							'<td align="center" class="cell-del" id="cell-del">'+
							'<a href="javascript:;" class="num"><i class="fa fa-remove"></i></a></td>'+
							'</tr>'+

						'</table>'+
						
				   '</li>'+
				   
               '</ul>'+
               
				//<!-- 通话界面2--->
               '<ul class="xxim_list" >'+
					 '<li class="voip_display_calling">'+

                           ' <div class="calling-msg" align="center">'+
							    '<div>'+
								'<i class="fa fa-user fa-5x"></i>'+
								
								'</div>'+
							    '<br/>'+
								'<div id="active_name">'+
								' 未知'+
								'</div>'+
								'<br/>'+
								
								
								'<div style="font-size:20px;" id="active_number">'+
								'未知'+
								'</div>'+
								'<div id="active_time">'+
								'00:00'+
								'</div>'+
							    
							'</div>'+

				     '</li>'+
					 '<li class="voip_display_actinon">'+
							

						'<table class="voip_nums_actinon">'+
							'<tr class="cell_line" style="height: 78px;">'+
							'<td align="center" id="startxferbtn" class="cell_actinon" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num" >'+
							'<i class="fa fa-random"></i><br/> 转接'+
							'</a>'+
							'</td>'+

							'<td align="center" id="hold" class="cell_actinon" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num" >'+
							'<i class="fa fa-pause"></i><br/> 挂起'+
							'</a>'+
							
							'</td>'+
							'<td align="center" id="voip_source" class="cell_actinon" style="border-bottom:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num" >'+
							'<i class="fa fa-volume-up"></i><br/> 声音'+
							'</a></td>'+
							'</tr>'+
							'<tr class="cell_line">'+
							'<td align="center" id="hupbtn" class="cell_actinon" colspan="3">'+
							'<a href="javascript:;" class="num" >'+
							'<i class="fa fa-phone">挂断</i>'+
							'</a></td>'+
							'</tr>'+
							'<tr>'+
							'<td align="center" class="cell_actinons" colspan="3" style="border-top:1px solid #E2E4E6;">'+
							   
							'</td>'+
							'</tr>'+
						'</table>'+



				     '</li>'+
               '</ul>'+


				//<!-- 来电界面3--->
               '<ul class="xxim_list" >'+
			      '<li class="voip_display_trying">'+

                           ' <div class="trying-msg" align="center">'+
                                
                                '<div>'+
                                 ' <i class="fa fa-user fa-3x"></i>'+
                               ' </div>'+
							    '<div id="trying_msg">'+
								    
								'</div>'+
							   
							'</div>'+

				   '</li>'+
			   
			       '<li class="voip_display_trying_body">'+
							

						'<table class="voip_nums_trying">'+
							'<tr class="cell_line" >'+
							'<td align="center" id="declinebtn" class="cell_trying" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;border-top:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num" >'+
							' <i class="fa fa-times-circle"></i><br/> 拒绝'+
							'</a>'+
							'</td>'+
							'<td align="center" id="ansbtn" class="cell_trying" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;border-top:1px solid #E2E4E6;">'+
							'<a href="javascript:;" class="num" >'+
							'<i class="fa fa-phone"></i><br/> 接听'+
							'</a>'+
							
							'</td>'+
							'</tr>'+

							'<tr class="cell_line">'+
							
							//'<td align="center" id="cell_trying_startxferbtn" class="cell_trying" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							//'<a href="javascript:;" class="num">'+
							//'<i class="fa fa-random"></i><br/> 转接</a>'+
							//'</td>'+
							//'<td align="center" class="cell_trying" style="border-right:1px solid #E2E4E6;border-bottom:1px solid #E2E4E6;">'+
							//'</td>'+
							'</tr>'+

						'</table>'+
				     '</li>'+
			   			   			 			   
			   '</ul>'+
			   
			   
			   //<!-- 外呼界面4--->
               '<ul class="xxim_list">'+
			      '<li class="voip_display_ringing">'+

                            '<div class="ringing-msg" align="center">'+
                                
                                '<div style="font-size: 30px;">'+
                                  '<i class="fa fa-user fa-3x"></i>'+
                                '</div>'+
							    '<div >'+
								   '<span style="font-size: 20px;" id="ringing_name">Evan</span> <br/>'+
								   '<span style="font-size: 30px;" id="ringing_msg">9664</span><br/>'+
								    '<span style="font-size: 20px;">正在呼叫...</span>'+
								'</div>'+
							   
							'</div>'+

				  ' </li>'+
			   
			       '<li class="voip_display_ringing_body">'+
						 '<div align="center" class="voip_nums_ringing">'+
						 '<button id="doCallHangUp" class="button button-raised button-caution button-circle button-jumbo">'+
						 '<i class="fa fa-phone"></i>'+
						 '</button>'+
						 '</div>'+
                      
				  ' </li>'+
			   
			   '</ul>'+


				

				//<!-- 挂起界面--->
               '<ul class="xxim_list">'+
			   			   			   			   
			   '</ul>'+




             '</div>'+
             
             '<ul class="xxim_bottom" id="xxim_bottom">'+
             ' <li class="xxim_hide" id="xxim_hide">'+
              ' <div align="center">'+
              '  <i class="fa fa-arrow-circle-right fa-lg" id="sign_icon" ></i>'+
              ' </div>'+
              '</li>'+
              
              '<li class="xxim_setting" id="voip_user_setting" title="用户设置">'+
               ' <div align="center">'+
              ' <i class="fa fa-user fa-lg"></i>'+
              ' </div>'+
              '</li>'+
              '<li class="xxim_setting" id="voip_system_setting" title="系统设置">'+
                '   <div align="center">'+
               '   <i class="fa fa-gear fa-lg"></i>'+
                 '   </div>'+
              '</li>'+
              '<li class="xxim_setting " id="voip_loginout" title="退出">'+
                  '<div align="center">'+
                 '<i class="fa fa-power-off fa-lg"></i>'+
                  '</div>'+
                 
              '</li>'+
              
              
              
              '<li id="xxim_on" class="xxim_icon xxim_on"></li>'+
            '</ul>'+
'</div>'+



'<div id="voip_conf">'+
    '<input type="hidden" id="active_time_seconds" value="0"/>'+
    '<div class="voip_liveArray_l">'+
	'<div style="color:black;font-family: verdana" align="center" id="conf_count"></div>'+
	'<table width="400" cellspacing="0" cellpadding="0" border="0" align="center" id="conf_list" class="jsDataTable">'+
	'</table>'+
	'<div id="conf_mod"></div>'+
	'<div style="color:blue" id="conf_display"></div>'+
	'</div>'+
	 '<div class="voip_liveArray_r" >'+
	    '<div id="voip_liveArray_video">'+
	      '<video  width=500  id="webcam"  autoplay="autoplay"  ></video>'+
	    '</div>'+
	   ' <div id="voip_liveArray_chatwin">'+
	       ' <ul class="msggroups"id="msggroups" >'+
           ' </ul>'+
	    '</div>'+
	   ' <div id="voip_liveArray_chatmsg">'+
	     ' <input style="width:390px;" id="sendmsg"/>'+
	     ' <button id="chatsend"  class="button button-primary button-pill button-small">发送</button>'+
	    '</div>'+	    
	 '</div>'+
'</div>';	
	voipNode = voip.layimNode = $(datas);	
	return voipNode;
};

//节点
voip.renode = function(){
    var node = voip.node = {
        tabs: $('#xxim_tabs>span'),
        list: $('.xxim_list'),
        online: $('.xxim_online'),
        setonline: $('.xxim_setonline'),
        onlinetex: $('#xxim_onlinetex'),
        xximon: $('#xxim_on'),
        layimFooter: $('#xxim_bottom'),
        xximHide: $('#xxim_hide'),
        xximSearch: $('#xxim_searchkey'),
        searchMian: $('#xxim_searchmain'),
        closeSearch: $('#xxim_closesearch'),
        layimMin: $('#layim_min'),
        num:$('.cell'),
        docall:$('#cell-phone'),
    }; 
};


//主界面缩放
voip.expend = function(){
    var node = voip.node;
    if(voip.layimNode.attr('state') !== '1'){
        voip.layimNode.stop().animate({right: config.right}, config.aniTime, function(){
            node.xximon.addClass('xxim_off');
            try{
                localStorage.layimState = 1;
            }catch(e){}
            voip.layimNode.attr({state: 1});
            node.layimFooter.addClass('xxim_expend').stop().animate({marginLeft: config.right}, config.aniTime/2);
            node.xximHide.addClass('xxim_show');
           // console.log("主界面收起");
            $("#sign_icon").removeClass('fa fa-arrow-circle-right');
            $("#sign_icon").addClass('fa fa-arrow-circle-left');
        });
    } else {
        voip.layimNode.stop().animate({right: 1}, config.aniTime, function(){
            node.xximon.removeClass('xxim_off');
            try{
                localStorage.layimState = 2;
            }catch(e){}
            voip.layimNode.removeAttr('state');
            node.layimFooter.removeClass('xxim_expend');
            node.xximHide.removeClass('xxim_show');
             //console.log("主界面展开");
             $("#sign_icon").removeClass('fa fa-arrow-circle-left');
             $("#sign_icon").addClass('fa fa-arrow-circle-right');
        });
        node.layimFooter.stop().animate({marginLeft: 0}, config.aniTime);
    }
};

//初始化窗口格局
voip.layinit = function(){
    var node = voip.node;
    
    //主界面
    try{
        if(!localStorage.layimState){       
            config.aniTime = 0;
            localStorage.layimState = 1;
        }
        if(localStorage.layimState === '1'){
            voip.layimNode.attr({state: 1}).css({right: config.right});
            node.xximon.addClass('xxim_off');
            node.layimFooter.addClass('xxim_expend').css({marginLeft: config.right});
            node.xximHide.addClass('xxim_show');
        }
    }catch(e){
        layer.msg(e.message, 5, -1);
    };
    
    
    ///时钟计算方法
    $("#top-clock").text(voip.clock("hh:mm"));
    setInterval(function(){
    $("#top-clock").text(voip.clock("hh:mm"));
    },1000);	
	
    
	
     
     if(vertos.checkbox_rember()=="true"){
    	 $("#checkbox_rember").attr("checked",true);
    	 $("#voip_name").val(vertos.name());
    	 $("#voip_cid").val(vertos.cid());
     }else{
    	 $("#checkbox_rember").attr("checked",false);
     };
     
      if(vertos.checkbox_autologin()=="true"){
    	 $("#checkbox_autologin").attr("checked",true);
    	 voip.autoLogin();
     }else{
    	 $("#checkbox_autologin").attr("checked",false);
     };
     
};

voip.changePage=function(index){
	var node = voip.node;
	node.list.eq(index).show().siblings('.xxim_list').hide();
};

///加载事件
voip.event=function(){

	var node = voip.node;
    
    //主界面tab
    node.tabs.eq(0).addClass('xxim_tabnow');
    node.tabs.on('click', function(){
        var othis = $(this), index = othis.index();
        voip.tabs(index);
    });
    
    //列表展收
    node.list.on('click', 'h5', function(){
        var othis = $(this), chat = othis.siblings('.xxim_chatlist'), parentss = othis.parent();
        if(parentss.hasClass('xxim_liston')){
            chat.hide();
            parentss.removeClass('xxim_liston');
        } else {
            chat.show();
            parentss.addClass('xxim_liston');
        }
    });
    
    node.xximon.on('click', voip.expend);
    node.xximHide.on('click', voip.expend);
    
    node.num.on('click',function(){
    	var othis = $(this);
    	var str=$('#callmun').text()+othis.text();
    	var numberstr=str.replace(/\s+/g,"");  	
    	if(numberstr.length>11){
    		layer.tips('号码过长！', "#callmun",{tips:3});
    	}else{
    		$('#callmun').text(numberstr);
    	}
    });
    
    
    $("#cell-del").click(function(e) {
    	var str=$('#callmun').text();
    	var numberstr=str.replace(/\s+/g, "");
        $('#callmun').text('');
    });
    
    node.docall.on('click',function(){
       vertos.ext($('#callmun').text().replace(/\s+/g,""));
       voip.docall();
    });
    
    ///挂起
    $("#hold").click(function(e) {
      vertos.cur_call.toggleHold();
      
      //墨绿深蓝风
		layer.alert('挂起', {
		  skin: 'layui-layer-molv' //样式类名
		  ,closeBtn: 0
		}, function(index){
			config.log("返回通话");
			vertos.cur_call.toggleHold();//返回
		    layer.close(index);
		});
      
	});
    
    $("#hupbtn").click(function() {
     vertos.verto.hangup();
     vertos.cur_call = null;
	});
    $("#startxferbtn").click(function() {
    	layer.prompt({
		  title: '通话转移',
		  formType:0 //prompt风格，支持0-2
		}, function(value, index, elem){//转接号码
		     config.log('通话转移:'+value);
		     layer.close(index);
		     vertos.cur_call.transfer(value);
		});      
	});
    
     $("#voip_user_setting").click(function() {
    	 if(config.layerindex==null){
    		voip.user_setting(); 
    	 };
    	 
	 });
     
      $("#voip_system_setting").click(function() {
    	 
    	 if(config.layerindex==null){
    		voip.system_setting();
    	 };
	 });
         
    $("#doCallHangUp").click(function() {
        vertos.cur_call.hangup();
    });
    
    $("#voip_loging").click(function() {
    	voip.autoLogin();
    });
    
    $("#voip_loginout").click(function() {
    	 if(vertos.online_visible){
    		 vertos.verto.logout();
    	 };
    });
    
    $("#checkbox_rember").click(function() {
    	vertos.checkbox_rember($("#checkbox_rember").is(':checked')+"");
    	
    	return ;
    	
    	var rember=$("#checkbox_rember").is(':checked')+"";
    	if(rember=="true"){
           vertos.checkbox_rember($("#checkbox_rember").is(':checked')+"");
    	}else{
    		vertos.checkbox_autologin("false");
    		$("#checkbox_autologin").attr("checked",true);
    		vertos.checkbox_rember($("#checkbox_rember").is(':checked')+"");
    	};
    });
    
    $("#checkbox_autologin").click(function() {
    	var autologin=$("#checkbox_autologin").is(':checked')+"";
    	vertos.checkbox_autologin(autologin);
    	return ;
    	
    	if(autologin=="true"){
    		config.log("autologinA="+autologin);
    	   $("#checkbox_rember").attr("checked",true);
    	   vertos.checkbox_rember("true");
    	}else{
    		config.log("autologinB="+autologin);
    	};
    	vertos.checkbox_autologin(autologin);
    	
    });
    
    
    $("#cell-user").click(function(){
    	   
    	  if(!config.layerindex){
    		  
    		  config.layerindex=layer.open({
			  type: 1,
			  title:'通讯录',
			  area: ['250px', '400px'],
			  skin: 'layui-layer-demo', //样式类名
			  closeBtn: 1, //不显示关闭按钮
			  //shift: 0,
			  shade:0,
			  content: '<table width="250">' +
			  '<tr><td class="txl_phone_name" align="center">测试<span class="txl_phone_num">888</span></td></tr>' +
			  '<tr><td class="txl_phone_name" align="center">电话会议<span class="txl_phone_num">3300</span></td></tr>' +
			  '<tr><td class="txl_phone_name" align="center">高清电话会议<span class="txl_phone_num">3500</span></td></tr>' +
			  '<tr><td class="txl_phone_name" align="center">测试IVR<span class="txl_phone_num">5000</span></td></tr>' +
			  '<tr><td class="txl_phone_name" align="center">听音乐<span class="txl_phone_num">9664</span></td></tr>' +
			  '<tr><td class="txl_phone_name" align="center">听笑话<span class="txl_phone_num">9386</span></td></tr>' +
			  '<tr><td class="txl_phone_name" align="center">键盘音<span class="txl_phone_num">9198</span></td></tr>' +
			  '</table>',
			  cancel: function(index){
			    config.layerindex=null;
			  }
			});
          
          $(".txl_phone_name").click(function() {
        	  var str=$(this).find(".txl_phone_num").text();
        	  var numberstr=str.replace(/\s+/g, "");
              $('#callmun').text(numberstr);
              if(config.layerindex){
            	  layer.close(config.layerindex);
            	  config.layerindex=null;
              }
              
          });
    		  
    		  
    		  
    	  }
          
          
     });
    
     //发送实时消息
     $("#chatsend").click(function() {
    	var message=$("#sendmsg").val();
    	if(message.length>0){
    		voip.message(message);
    	}else{
    		//layer.msg('不能为空');
    		layer.tips('号码过长！', "#chatsend",{tips:1});
    	}
    	
        
     });
     
     
     $("#voip_source").click(function() {
    	 
    	 if(config.layerindex==null){
    		 
         var myaudio =document.getElementById("webcam"); 
    	 var delful=0;
    	 if(myaudio){
    		 delful=parseInt(myaudio.volume*100);
    	 };
    	 
    	 config.layerindex=layer.open({
		  type: 1,
		  title:'音量调节',
		  area: ['200px', '100px'],
		  skin: 'layui-layer-demo', //样式类名
		  shade:0,
		  content: '<input id="voip_source_range" type="range" min="0" max="100" value='+delful+' /><i id="voip_source_range_val" class="fa fa-volume-up">'+delful+'</i>',
		  cancel: function(index){
			    config.layerindex=null;
		  }
		});
    	 
    	 
    	 $("#voip_source_range").change(function(){
    		 var myaudios =document.getElementById("webcam"); 
    		 var val=$(this).val();
    		 var volume= parseInt(val)/100;
    		 $("#voip_source_range_val").html(val);
    		 if(myaudios){
    			myaudios.volume=volume;
    		 };
    	 });
    	 
    	 
    	 };
    	 
    	 
     });
};

///用户设置
voip.user_setting=function(){
     var us=vertos.wsURL().split(":");
	 var port=us[us.length-1];//vertos.wsURL()
config.layerindex=layer.open({
  type: 1,
  title:'用户设置',
  area: ['500px', '300px'],
  skin: 'layui-layer-demo', //样式类名
  closeBtn: 1, //不显示关闭按钮
  //shift: 0,
  shade:0,
  content: '<div class="voip_setting_tab" id="voip_setting_tab_a" align="center">'+
       '<table>'+
         '<tr class="voip_rows"><td>姓名</td><td><input value="'+vertos.name()+'" id="user_setting_name"/></td><td>账号</td><td><input id="user_setting_cid" value="'+vertos.cid()+'" /></td></tr>'+
         '<tr class="voip_rows"><td>密码</td><td><input id="user_setting_pwd" type="password" value="'+vertos.passwd()+'"/></td><td>主机</td><td><input id="user_setting_hostName"  value="'+vertos.hostName()+'"/></td></tr>'+
          '<tr class="voip_rows"><td>协议</td><td>' +
           '<select id="user_ws" >'+
             '<option value="ws">非SSL加密传输协议</option>'+
             '<option value="wss">SSL加密传输协议</option>'+
            '</select>'+
           '</td><td>端口</td><td><input id="user_port"  value="'+port+'"/></td></tr>'+
           '<tr class="voip_rows"><td colspan="4" align="center"><button class="button button-primary button-small" id="user_setting_save">保存</button ></td></tr>'+
       '</table>'+
       '</div>',
  cancel: function(index){
    config.layerindex=null;
    //alert(index);
  }
});


$("#user_setting_save").click(function() {
    var user_setting_name=$("#user_setting_name").val();
    
    if (user_setting_name.replace(/(^s*)|(s*$)/g, "").length ==0){ 
	 // layer.alert('姓名不能为空', {icon: 5});
	  layer.tips('姓名不能为空', "#user_setting_name",{tips:1});
	  return true;
    };
    
    var user_setting_cid=$("#user_setting_cid").val();

    if (user_setting_cid.replace(/(^s*)|(s*$)/g, "").length ==0){ 
	 // layer.alert('账号不能为空', {icon: 5});
	  layer.tips('账号不能为空', "#user_setting_cid",{tips:1});
	  return true;
    };
    
    
    if (isNaN(user_setting_cid)){ 
	  	  // layer.alert('必须为数字！', {icon: 5});
	  	   layer.tips('必须为数字！', "#user_setting_cid",{tips:1});
		  return true;
    };
    
    
           
    var user_setting_pwd=$("#user_setting_pwd").val();
    
    if (user_setting_pwd.replace(/(^s*)|(s*$)/g, "").length ==0){ 
	  //layer.alert('密码不能为空', {icon: 5});
	   layer.tips('密码不能为空', "#user_setting_pwd",{tips:1});
	  return true;
    };
    
    var user_setting_hostName=$("#user_setting_hostName").val();
    
    if (user_setting_hostName.replace(/(^s*)|(s*$)/g, "").length ==0){ 
	  //layer.alert('主机地址不能为空', {icon: 5});
	  layer.tips('主机地址不能为空', "#user_setting_hostName",{tips:1});
	  return true;
    };
    
    
    var user_ws=$("#user_ws").val();//加密协议
    var user_port=$("#user_port").val();//端口
    
    if (user_port.replace(/(^s*)|(s*$)/g, "").length ==0){ 
	 // layer.alert('账号不能为空', {icon: 5});
	  layer.tips('端口不能为空', "#user_port",{tips:1});
	  return true;
    };
    
    if (isNaN(user_port)){ 
	  	  // layer.alert('必须为数字！', {icon: 5});
	  	   layer.tips('必须为数字！', "#user_port",{tips:1});
		  return true;
    };
    
    
    
    vertos.name(user_setting_name);
    vertos.cid(user_setting_cid);
    vertos.passwd(user_setting_pwd);
    vertos.hostName(user_setting_hostName);
    var wsURL=user_ws+"://"+user_setting_hostName+":"+user_port;
    vertos.wsURL(wsURL);
    
    layer.alert('设置成功!', {icon: 6,shade:0},function(index){layer.close(index); layer.close(config.layerindex);config.layerindex=null; } );
});



	
};

///系统设置
voip.system_setting=function(){
	
	var vid=vertos.use_vid()===true?'checked="checked"':'""';
	var autocall=vertos.autocall()===true?'checked="checked"':'""';
	var stun=vertos.use_stun()===true?'checked="checked"':'""';
	var stereo=vertos.use_stereo()===true?'checked="checked"':'""';
	var debug=config.debug()==="true"?'checked="checked"':'""';
	var debug_model=config.debug()==="true"?'""':'disabled="disabled"';
	//config.log(vertos.use_stereo());
	
	var bells="";
	
	for(var i=0;i<vertos.sounds.length;i++){
		bells=bells+'<option value="'+vertos.sounds[i].url+'">'+vertos.sounds[i].name+'</option>';
	}
	
	
	
config.layerindex=layer.open({
  type: 1,
  title:'系统设置',
  area: ['500px', '300px'],
  skin: 'layui-layer-demo', //样式类名
  closeBtn:1, //不显示关闭按钮
  //shift: 2,
  shade:0,
  //shadeClose: true, //开启遮罩关闭
  content: '<div class="voip_setting_tab" id="voip_setting_tab_b" align="center">'+
       '<table>'+
        ' <tr class="voip_rows"><td>来电铃声</td>'+
         '<td><select id="voip_bell_ring" disabled="disabled">'+bells+
            '</select>'+
          '</td>'+
         '</tr>'+
         '<tr class="voip_rows">'+
         '<td>视频通话<input type="checkbox" disabled="disabled" '+vid+' id="voip_use_vid"/></td>'+
         '<td>断线重拨 <input type="checkbox" disabled="disabled" id="reallocation" '+autocall+'/></td>'+
         '</tr>'+
         '<tr class="voip_rows">'+
         '<td>STUN协议<input type="checkbox" id="voip_use_stun" '+stun+'/></td>'+
         '<td>立体声音 <input type="checkbox" id="voip_use_stereo" '+stereo+'/></td>'+
         '</tr>'+
         '<tr class="voip_rows">'+
         '<td>Debug模式<input type="checkbox" id="voip_use_debug" '+debug+'/></td>'+
        ' <td>'+
           ' <select '+debug_model+' id="voip_use_debug_model" disabled="disabled">'+
             '<option value="1">控制台</option>'+
             '<option value="2">页面</option>'+
           ' </select>'+
         '</td>'+
         '</tr>'+
         '<tr class="voip_rows"><td>账号时间</td>'+
         '<td> <input value="365" style="width: 50px;" disabled="disabled" id="voip_use_time"/>天</td>'+
         '</tr>'+
         '<tr class="voip_rows"><td colspan="2" align="center"><button class="button button-primary button-small" id="voip_system_setting_save">保存</button ></td></tr>'+
       '</table>'+
       '</div>',
       cancel: function(index){
         config.layerindex=null;
          //alert(index);
       }
	
});
	
	$("#voip_use_debug").click(function() {
		var voip_use_debug=$("#voip_use_debug").is(':checked')+"";
		if(voip_use_debug=="true"){
			//$("#voip_use_debug_model").attr("disabled","");
			document.getElementById("voip_use_debug_model").disabled=false;
		}else{
			//$("#voip_use_debug_model").attr("disabled","disabled");
			document.getElementById("voip_use_debug_model").disabled=true;
		}		
	});


	
	$("#voip_system_setting_save").click(function() {
		var bell=$("#voip_bell_ring").val();
		
		var voip_use_vid=$("#voip_use_vid").is(':checked')+"";
		
		var reallocation=$("#reallocation").is(':checked')+"";
		
		var voip_use_stun=$("#voip_use_stun").is(':checked')+"";
		
		var voip_use_stereo=$("#voip_use_stereo").is(':checked')+"";
		
		var voip_use_debug=$("#voip_use_debug").is(':checked')+"";
		
		var voip_use_debug_model=$("#voip_use_debug_model").val();
		
		var voip_use_time=$("#voip_use_time").val();
		
		if (voip_use_time.replace(/(^s*)|(s*$)/g, "").length ==0){ 
	  	  // layer.alert('账号不能为空！', {icon: 5});
	  	   layer.tips('账号不能为空！', "#voip_use_time",{tips:1});
		  return true;
    	};
    	
    	if (isNaN(voip_use_time)){ 
	  	  // layer.alert('必须为数字！', {icon: 5});
	  	   layer.tips('必须为数字！', "#voip_use_time",{tips:1});
		  return true;
    	};
		
		
		vertos.ringtones(bell);
		vertos.use_stun(voip_use_stun);
		vertos.use_stereo(voip_use_stereo);
		vertos.autocall(reallocation);
		vertos.use_vid(voip_use_vid);
		config.debug(voip_use_debug);
		config.debugmodel(voip_use_debug_model);
		
		layer.alert('设置成功!', {icon: 6,shade:0},function(index){layer.close(index); layer.close(config.layerindex); config.layerindex=null;} );	
	});
	
	

	

};
voip.autoLogin=function(){
		var name=$("#voip_name").val();
        var cid=$("#voip_cid").val();
        
        if (name.replace(/(^s*)|(s*$)/g,"").length ==0){ 
	  	  // layer.alert('账号不能为空！', {icon: 5});
        	layer.tips('账号不能为空！', "#voip_name",{tips:1});
		  return true;
    	};
    	
    	if (cid.replace(/(^s*)|(s*$)/g, "").length ==0){ 
	  	   layer.tips('账号不能为空！', "#voip_cid",{tips:1});
		  return true;
    	};
        
        
        vertos.name(name);//设置登陆名
        vertos.cid(cid);//设置登陆号
        vertos.login(cid);//设置登陆ID
        voip.login();
        $("#callmun").html(vertos.ext());
        $("#voip_login_msg").addClass("fa fa-spinner fa-2x fa-pulse");
	
};


voip.dubugPage=function(val){
	if(config.debugindex==null){
		config.debugindex=layer.open({
	    type: 1,
	    shade :0,
	    offset: ['10px', '10px'],
	    title :'Debug模式窗口',
	    skin: 'layui-layer-rim', //加上边框
	    area: ['600px','400px'], //宽高
	    content: '<div id="voip_debug_page">'+val+'<br/></div>'
	  }); 
		
	}else{
		$("#voip_debug_page").append(val+'<br/>');
	}
};



//定时任务
voip.job=function(){
	
	
};



//时钟方法
voip.clock=function(sdf){
	   if(sdf){   
	   }else{
		   sdf="yyyy-MM-dd hh:mm:ss";//使用默认格式
	   }
	   var myDate = new Date();
	   var year=myDate.getFullYear();//获取完整的年份(4位,1970-????)
	   var month=myDate.getMonth()+1;//获取当前月份(0-11,0代表1月)
	   var date=myDate.getDate();        //获取当前日(1-31)
	   var hours=myDate.getHours();       //获取当前小时数(0-23)
	   
	   if(hours<10){
		  hours="0"+hours;
	   }
	   
	   var minutes=myDate.getMinutes();     //获取当前分钟数(0-59)
	   if(minutes<10){
		  minutes="0"+minutes;
	   }
	   var seconds=myDate.getSeconds();     //获取当前秒数(0-59)
	   if(seconds<10){
		  seconds="0"+seconds;
	   }
	   //var milliseconds=myDate.getMilliseconds();    //获取当前毫秒数(0-999)
	   //var time=hours+":"+minutes+":"+seconds;
	   
	    var time=sdf.replace("yyyy",year).replace("MM",month).replace("dd",date).replace("hh",hours).replace("mm",minutes).replace("ss",seconds);
	    
	    return time;
	   //var time=hours+":"+minutes;
	   
	
};


//计时器
voip.timer=function(val,cause){

	if(val=="start"){
		config.log("计时器启动");
		var seconds=1;
		//config.log("00:00:01");
		$("#active_time").html("00:00:01");
		$("#active_time_seconds").val(1);
		if(config.timer){
			config.log("计时器以启动");
		}else{
		   config.timer=setInterval(function(){
		   seconds++;
		   var mm=parseInt(seconds/60);//分钟
		   var hh=parseInt(mm/60);//小时
		   var ss=seconds-mm*60;//秒数
	       var mi=mm-hh*60;//	
	       if(ss<10){ss="0"+ss;}
	       if(mi<10){mi="0"+mi;}
	       if(hh<10){hh="0"+hh;}
	        var t=hh+":"+mi+":"+ss;
		    //config.log(t);
		    $("#active_time").html(t);
		    $("#active_time_seconds").val(seconds);
	       },1000);
			
		}
		
		
		
	}else{
		if(config.timer){
			clearInterval(config.timer);
			var time=$("#active_time").html();
			var seconds=$("#active_time_seconds").val();
			
			if(cause=="NORMAL CLEARING"){
				layer.alert(time+"("+seconds+"秒)",{icon: 6,shade :0,title:"通话时间"});
			}else{
				layer.alert(time+"("+seconds+"秒)<br/>挂断原因:<br/><span style='color:red;'>"+cause+"</span>",{icon: 5,shade :0,title:"通话时间"});
			}
			
			
			config.log("计时器停止");
			config.timer=null;
		}else{
			config.log("计时器未启动");
		}	
	}
};



	
//初始化
voip.view = (function(){
	///加载UI初始化
	var voipNode=voip.init(0);
	dom[3].append(voipNode);//初始化骨架
		
	///加载事件
	voip.renode();
	voip.event();
	voip.layinit();
	
}());
	
}(window);